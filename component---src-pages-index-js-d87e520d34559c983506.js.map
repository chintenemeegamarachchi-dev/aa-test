{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","useState","articles","setArticles","useEffect","a","axios","get","response","fetchData","length","map","article","slug","key","itemScope","itemType","style","marginBottom","rhythm","boxShadow","to","itemProp","summary","dangerouslySetInnerHTML","__html","description","pageQuery"],"mappings":"uRAwEeA,UAhEG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QADsB,EAGRC,mBAAS,IAAlCC,EAHiC,KAGvBC,EAHuB,KAaxC,OARAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACyBC,IAAMC,IAAI,iCADnC,OACQC,EADR,OAEEL,EAAYK,EAASb,MAFvB,4CADc,uBAAC,WAAD,wBAKdc,KACE,IAEoB,IAApBP,EAASQ,OAET,kBAAC,IAAD,CAAQd,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,oDAMJ,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACVE,EAASS,KAAI,SAACC,GACb,IAAMZ,EAAQY,EAAQZ,OAASY,EAAQC,KACvC,OACE,6BACEC,IAAKF,EAAQC,KACbE,WAAS,EACTC,SAAS,6BAET,gCACE,wBACEC,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,IAAD,CACEF,MAAO,CAAEG,UAAU,QACnBC,GAAIT,EAAQC,KACZS,SAAS,OAET,0BAAMA,SAAS,YAAYtB,KAG/B,+BAAQY,EAAQW,UAElB,iCACE,uBACEC,wBAAyB,CACvBC,OAAQb,EAAQc,aAElBJ,SAAS,uBAYlB,IAAMK,EAAS","file":"component---src-pages-index-js-d87e520d34559c983506.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport axios from \"axios\";\r\n\r\nimport SEO from \"../components/seo\"\r\nimport Layout from \"../components/layout\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n\r\n  const [articles, setArticles] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const response = await axios.get(\"http://localhost:5000/article\");\r\n      setArticles(response.data)\r\n    }\r\n    fetchData();\r\n   }, []);\r\n\r\n  if (articles.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <SEO title=\"All posts\" />\r\n        <p>No blog posts found.</p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"All posts\" />\r\n      {articles.map((article) => {\r\n        const title = article.title || article.slug\r\n        return (\r\n          <article\r\n            key={article.slug}\r\n            itemScope\r\n            itemType=\"http://schema.org/Article\"\r\n          >\r\n            <header>\r\n              <h3\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                <Link\r\n                  style={{ boxShadow: `none` }}\r\n                  to={article.slug}\r\n                  itemProp=\"url\"\r\n                >\r\n                  <span itemProp=\"headline\">{title}</span>\r\n                </Link>\r\n              </h3>\r\n              <small>{article.summary}</small>\r\n            </header>\r\n            <section>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: article.description,\r\n                }}\r\n                itemProp=\"description\"\r\n              />\r\n            </section>\r\n          </article>\r\n        )\r\n      })}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}